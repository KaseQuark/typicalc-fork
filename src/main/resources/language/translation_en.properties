root.close=Close
root.save=Save
root.copyLatex=Copy latex code
root.selectExample=Select example:
root.typeInfer=Type
root.operatingHelp=Operating Help
root.inputSyntax=Input Syntax
root.inferenceRules=Inference Rules
root.absRule=Abs rule
root.appRule=App rule
root.varRule=Var rule
root.constRule=Const rule
root.letRule=Let rule
root.absRuleLet=Abs rule with Let
root.varRuleLet=Var rule with Let
root.german=German
root.english=English
root.selectLanguage=Language
root.termExplanation=The following grammar specifies the structure of a valid term:
root.assExplanation=The following grammar specifies the syntax of a valid type:
root.typeAssumptions=Type Assumptions
root.addAssumption=Add Type Assumption
root.deleteAll=Delete All
root.variable=Variable
root.type=Type
root.title404=404 - Not Found
root.message404=Try /infer/<term> or type your favourite term into the input field
root.drawer=Drawer
root.example=Examples
root.inputField=Input Field
root.typeInferButton=Type Button
root.firstStepButton=First-Step Button
root.previousStepButton=Previous-Step Button
root.nextStepButton=Next-Step Button
root.lastStepButton=Last-Step Button
root.shareButton=Share Button
root.helpDrawer=Clicking on the button opens up the drawer. The drawer contains a collection of all type inference \
rules. By clicking on the copy button the LaTeX code of the corresponding rule is copied to the clipboard.
root.helpExample=Clicking on the button opens up the example dialog. After clicking on an example the corresponding \
term is inserted into the input field. Now either the type inference algorithm can be started or the term can be \
modified.
root.helpInputField=The input field allows the user to enter lambda terms with a maximum length of 1000 characters. \
The λ character can be inserted at the current cursor position by either clicking the λ button or entering a \
backslash. By clicking on the info icon the grammar defining the valid input syntax is shown.
root.helpTypeAssumptions=Clicking on the type assumptions button opens up a dialog to enter type assumptions. \
By clicking the icon symbol the grammar defining a valid type of a type assumption is shown. If the same variable \
is contained in multiple type assumptions, only the uppermost type assumption containing the variable is used for \
the algorithm. If the type of a type assumptions starts with a 't' followed by only digits, the type is automatically \
converted to a type variable.
root.helpTypeInferButton=Clicking on the type button starts the type inference algorithm for the current input. \
The longer the entered term the longer the time to display the type inference tree. With a slow computer or a \
very long term a lot of patience will be required.
root.helpFirstStepButton=The function of the button depends on the current state of the algorithm. \
If the tree is currently being built up, clicking on the button shows the first step of the inference tree. \
If the unification algorithm is already in progress, clicking on the button shows the last step of the inference \
tree. The key combination "CTRL + left arrow key" also executes a click on the button.
root.helpPreviousStepButton=By clicking the previous step button the previous step of the algorithm is shown. \
The key "left arrow key" also executes a click on the button.
root.helpNextStepButton=By clicking the next-step button the next step of the algorithm is shown. \
The key "right arrow key" also executes a click on the button.
root.helpLastStepButton=The function of the button depends on the current state of the algorithm. \
If the tree is currently being built up, clicking on the button shows the last step of the inference tree. \
If the unification algorithm is already in progress, clicking on the button shows the final type of the  \
entered term. The key combination "CTRL + right arrow key" also executes a click on the button.
root.helpShareButton=Clicking the share button opens up a dialog containing the LaTeX code of the final inference \
tree and the packages needed to compile the LaTeX code. In addition a permalink to the current page is provided. \
This link encodes the current term as well as the current type assumptions.
root.TOO_FEW_TOKENS=Wrong input! The term ends abruptly.
root.tooFewTokensHelp=Check if all let, abstraction and application terms consist of the required arguments.
root.UNEXPECTED_TOKEN=The input does not match the syntax specified in the info dialog.
root.UNEXPECTED_CHARACTER=The input contains a characters which is not allowed at this position.
root.wrongCharacter=Wrong character: \u0020
root.position=At Position: \u0020

root.absLetLatex=\
\\begin{prooftree}\
\\AxiomC{$\\Gamma , \\texttt{x}: \\tau_1 \\vdash t : \\tau_2$}\
\
\\AxiomC{$\\tau_1$ \\ \\texttt{no type scheme}}\
\
\\LeftLabel{\\rm A{\\small BS}}\
\\BinaryInfC{$\\Gamma \\vdash \\lambda \\texttt{x}.t : \\tau_1 \\rightarrow \\tau_2$}\
\\end{prooftree}

share.url.label=URL
share.packages.label=Packages
share.latex.label=LaTeX code
