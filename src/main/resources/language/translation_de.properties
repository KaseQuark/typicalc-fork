root.close=Schließen
root.copyLatex=Kopiere Latex-Code
root.selectExample=Beispiel auswählen:
root.typeInfer=Typisieren
root.operatingHelp=Bedienhilfen
root.inputSyntax=Eingabe Syntax
root.inferenceRules=Ableitungsregeln
root.overlongInput=Die maximale Länge der Eingabe beträgt 1000 Zeichen!
root.absRule=Abs-Regel
root.appRule=App-Regel
root.varRule=Var-Regel
root.constRule=Const-Regel
root.letRule=Let-Regel
root.absRuleLet=Abs-Regel mit Let
root.varRuleLet=Var-Regel mit Let
root.german=Deutsch
root.english=Englisch
root.selectLanguage=Sprache

root.absLetLatex=\
\\begin{prooftree}\
\\AxiomC{$\\Gamma , \\texttt{x}: \\tau_1 \\vdash t : \\tau_2$}\
\
\\AxiomC{$\\tau_1$ \\ \\texttt{kein Typschema}}\
\
\\LeftLabel{\\rm A{\\small BS}}\
\\BinaryInfC{$\\Gamma \\vdash \\lambda \\texttt{x}.t : \\tau_1 \\rightarrow \\tau_2$}\
\\end{prooftree}

demo-tree=\
\\(\n\
\\newcommand{\\ltype}[3]{{#1} \\mathrel{\\vdash}{#2} \\mathrel{:}{#3}} % "eine Zeile"\n\
\\newcommand{\\la}[2]{\\lambda{\\lv{#1}}.\\ {#2}} % "λx."\n\
\\newcommand{\\lapp}[2]{{#1}\\ {#2}} % Applikation\n\
\\newcommand{\\lv}[1]{\\texttt{#1}} % monospace\n\
\\newcommand{\\bigdash}{\\mathop{|\\mkern-4mu-}\\limits}\n\
\\newcommand{\\assmapping}[2]{#1 : #2} % Typannahme\n\
\\)\n\
\\begin{prooftree}\n\
\\AxiomC{$\\lapp{\\left( \\assmapping{\\lv{f}}{\\alpha_2}, \\assmapping{\\lv{x}}{\\alpha_4} \\right)}{\\left( \\lv{f} \\right) = \\alpha_6}$}\n\
\\LeftLabel{Var}\n\
\\UnaryInfC{$\\ltype{\\assmapping{\\lv{f}}{\\alpha_2}, \\assmapping{\\lv{x}}{\\alpha_2}}{\\lv{f}}{\\alpha_6}$}\n\
\n\
\\AxiomC{$\\lapp{\\left( \\assmapping{\\lv{f}}{\\alpha_2}, \\assmapping{\\lv{x}}{\\alpha_4} \\right)}{\\left( \\lv{f} \\right) = \\alpha_8}$}\n\
\n\
\\LeftLabel{Var}\n\
\\UnaryInfC{$\\ltype{\\assmapping{\\lv{f}}{\\alpha_2}, \\assmapping{\\lv{x}}{\\alpha_2}}{\\lv{f}}{\\alpha_8}$}\n\
\n\
\n\
\\AxiomC{$\\lapp{\\left( \\assmapping{\\lv{f}}{\\alpha_2}, \\assmapping{\\lv{x}}{\\alpha_4} \\right)}{\\left( \\lv{x} \\right) = \\alpha_9}$}\n\
\n\
\\LeftLabel{Var}\n\
\\UnaryInfC{$\\ltype{\\assmapping{\\lv{f}}{\\alpha_2}, \\assmapping{\\lv{x}}{\\alpha_2}}{\\lv{x}}{\\alpha_9}$}\n\
\n\
\\LeftLabel{App}\n\
\\BinaryInfC{$\\ltype{\\assmapping{\\lv{f}}{\\alpha_2}, \\assmapping{\\lv{x}}{\\alpha_2}}{\\lapp{\\lv{f}}{\\lv{x}}}{\\alpha_7}$}\n\
\n\
\\LeftLabel{App}\n\
\\BinaryInfC{$\\ltype{\\assmapping{\\lv{f}}{\\alpha_2}, \\assmapping{\\lv{x}}{\\alpha_2}}{\\lapp{\\lv{f}}{\\left( \\lapp{\\lv{f}}{\\lv{x}} \\right)}}{\\alpha_5}$}\n\
\n\
\\LeftLabel{Abs}\n\
\\UnaryInfC{$\\ltype{\\assmapping{\\lv{f}}{\\alpha_2}}{\\la{x}{\\lapp{\\lv{f}}{\\left( \\lapp{\\lv{f}}{\\lv{x}} \\right) }}}{\\alpha_3}$}\n\
\n\
\\LeftLabel{Abs}\n\
\\UnaryInfC{$\\ltype{}{\\la{f}{\\la{x}{\\lapp{\\lv{f}}{\\left( \\lapp{\\lv{f}}{\\lv{x}} \\right) }}}}{\\alpha_1}$}\n\
\\end{prooftree}